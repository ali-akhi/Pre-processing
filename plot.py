# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sv9jxTwowkQanVn38B9Nc45YlMC6d1LX
"""

from google.colab import drive
import numpy as np
import pandas as pd
import io
import seaborn as sns
import matplotlib.pyplot as plt
from scipy.stats import linregress
import matplotlib.pyplot
import matplotlib.dates
import os
import plotly.graph_objects as go
import plotly.express as px

#function for read data frame(csv file)

def read_df(path):
    df=pd.read_csv(path)
    return df

drive.mount('/content/drive')
path= '/content/drive/MyDrive/out.csv'

dataframe= read_df(path)

#simple plot
added= dataframe['added']
sns.set()
added.plot()

df = px.data.stocks(indexed=True)-1
fig = px.area(df, facet_col="company", facet_col_wrap=2)
fig.show()

#source lable with number commit

# Read in the file to a Pandas 'DataFrame'
# Group the different entries 
dfg = dataframe.groupby('committer')

fig, ax = plt.subplots()

# Loop over group names
# and plot each one separately (assigning the appropriate label)
for committer in dfg.groups.keys():
    thisdf = dfg.get_group(committer)
    ax.plot_date(thisdf['commit_time'], thisdf['committer'], 'o-', label=committer)
ax.legend()
fig.autofmt_xdate()

plt.show()

fig, ax = plt.subplots(figsize=(10, 10))

# Add x-axis and y-axis
x= dataframe['commit_time']
y= dataframe['added']
ax.plot(x, y ,color='purple')

# Set title and labels for axes
ax.set(xlabel="commit time",
       ylabel="added",
       title="This is Title")

plt.show()

# Change the default figure size
plt.figure(figsize=(10,10))

# Change the default marker for the scatter from circles to x's
plt.scatter(x, y, marker='x')

# Set the linewidth on the regression line to 3px
plt.plot(x, y, color="red", linewidth=3)

# Add x and y lables, and set their font size
plt.xlabel("Height (m)", fontsize=20)
plt.ylabel("Latitude", fontsize=20)

# Set the font size of the number lables on the axes
plt.xticks(fontsize=18)
plt.yticks(fontsize=18)

plt.savefig("python-linear-reg-custom.png")
plt.show()

fig = go.Figure([go.Scatter(x=dataframe['commit_time'], y=dataframe['added'])])
fig.show()